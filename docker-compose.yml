version: '2'

services:
  postgres:
    image: postgres:10.6-alpine
    container_name: asciinema_postgres
    restart: unless-stopped
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    ### See https://hub.docker.com/_/postgres/ for more
    ### configuration options for this image.

  smtp:
    image: namshi/smtp
    container_name: asciinema_smtp
    restart: unless-stopped
    env_file: .env.production
    ### See https://github.com/namshi/docker-smtp for more SMTP configuration
    ### options for this image.

  nginx:
    image: nginx:1.15-alpine
    container_name: asciinema_nginx
    restart: unless-stopped
    links:
      - phoenix
    ports:
#      - "127.0.0.1:3000:3000"
# This appears to be the main config for port forwarding. I wish I understood more about container technology
# If I did then being able to run just the web server, for all immediate intents and purposes could be cool. 
# Or it could just be an area where the screencasts would exist in the website and not be able to be extracted.
      - "127.0.0.1:3000:8080"
    volumes:
      - ./docker/nginx/asciinema.conf:/etc/nginx/conf.d/default.conf:ro
      - ./volumes/cache:/cache
      ### Uncomment for HTTPS (make sure to add your cert and private key to ./certs):
      #  - ./certs:/app/priv/certs
    ### See https://hub.docker.com/_/nginx/ for more configuration options for
    ### this image.

  phoenix:
    image: asciinema/asciinema-server
    container_name: asciinema_phoenix
    restart: unless-stopped
    links:
      - postgres
      - smtp
    env_file: .env.production
    volumes:
      - ./volumes/uploads:/opt/app/uploads
